name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes in package.json
        run: |
          git diff --cached --diff-filter=d package.json || {
            echo "No changes to package.json"
            exit 1
          }

      - name: Get version number from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=${VERSION}" >> $GITHUB_ENV

      - name: Extract latest CHANGELOG entry
        id: changelog
        run: |
          CHANGELOG_CONTENT=$(awk 'BEGIN {print_section=0;} /^## \[/ {if (print_section == 0) {print_section=1;} else {exit;}} print_section {print;}' CHANGELOG.md)
          CHANGELOG_ESCAPED=$(echo "$CHANGELOG_CONTENT" | sed ':a;N;$!ba;s/\n/%0A/g')
          echo "content=${CHANGELOG_ESCAPED}" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changelog = process.env.content;
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.version}`,
              name: `v${process.env.version}`,
              body: changelog,
            });
            console.log(`Created release ${release.data.html_url}`);

      - name: Upload package to GitHub release
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            .
            !.git

      - name: Trigger Docker build workflow
        id: trigger_docker_build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yaml',
              ref: `v${process.env.version}`,
            });
            console.log('Triggered Docker build workflow');

      - name: Wait for Docker build workflow to complete
        id: wait_for_build
        uses: tyriis/gh-workflow-wait-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          workflow: docker-build.yaml
          ref: v${{ env.version }}
          timeout: 3600

      - name: Checkout AccelBrain-dev__confidential repository
        if: steps.wait_for_build.outputs.conclusion == 'success'
        uses: actions/checkout@v4
        with:
          repository: ChangLijie/AccelBrain-dev__confidential
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: accelbrain-confidential

      - name: Update docker-compose.yaml image tag
        if: steps.wait_for_build.outputs.conclusion == 'success'
        run: |
          cd accelbrain-confidential
          sed -i "s|innodiskorg/open-webui:.*|innodiskorg/open-webui:v${{ env.version }}|g" docker-compose.yaml

      - name: Commit and push changes
        if: steps.wait_for_build.outputs.conclusion == 'success'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump open-webui image to v${{ env.version }}"
          repository: ./accelbrain-confidential
