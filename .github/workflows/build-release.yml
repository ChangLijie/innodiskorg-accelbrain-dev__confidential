name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes in package.json
        run: |
          git diff --cached --diff-filter=d package.json || {
            echo "No changes to package.json"
            exit 1
          }

      - name: Get version number from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "::set-output name=version::$VERSION"

      - name: Extract latest CHANGELOG entry
        id: changelog
        run: |
          CHANGELOG_CONTENT=$(awk 'BEGIN {print_section=0;} /^## \[/ {if (print_section == 0) {print_section=1;} else {exit;}} print_section {print;}' CHANGELOG.md)
          CHANGELOG_ESCAPED=$(echo "$CHANGELOG_CONTENT" | sed ':a;N;$!ba;s/\n/%0A/g')
          echo "Extracted latest release notes from CHANGELOG.md:" 
          echo -e "$CHANGELOG_CONTENT"
          echo "::set-output name=content::$CHANGELOG_ESCAPED"

      - name: Create GitHub release
        id: create_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changelog = `${{ steps.changelog.outputs.content }}`;
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${{ steps.get_version.outputs.version }}`,
              name: `v${{ steps.get_version.outputs.version }}`,
              body: changelog,
            });
            console.log(`Created release ${release.data.html_url}`);

      - name: Upload package to GitHub release
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            .
            !.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Docker build workflow
        id: trigger_docker_build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'docker-build.yaml',
              ref: 'v${{ steps.get_version.outputs.version }}',
            });
            console.log('Triggered Docker build workflow');

      - name: Wait for Docker build workflow to complete
        id: wait_for_build
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const workflowId = 'docker-build.yaml';
            const ref = 'refs/tags/v${{ steps.get_version.outputs.version }}';
            const timeout = 60 * 60 * 1000; // 1 hour in ms
            const interval = 10000; // 10 seconds
            const start = Date.now();

            async function getWorkflowRun() {
              const { data: runs } = await github.rest.actions.listWorkflowRuns({
                owner,
                repo,
                workflow_id: workflowId,
                event: 'workflow_dispatch',
              });
              return runs.workflow_runs.find(run => run.head_branch === ref);
            }

            let run;
            while ((Date.now() - start) < timeout) {
              run = await getWorkflowRun();
              if (run) {
                console.log(`Found workflow run: ${run.html_url}`);
                if (run.status === 'completed') {
                  if (run.conclusion === 'success') {
                    console.log('Workflow completed successfully!');
                    return;
                  } else {
                    throw new Error(`Workflow failed with conclusion: ${run.conclusion}`);
                  }
                } else {
                  console.log(`Workflow status: ${run.status}, waiting...`);
                }
              } else {
                console.log('Workflow run not found yet, waiting...');
              }
              await new Promise(resolve => setTimeout(resolve, interval));
            }

            throw new Error('Timeout waiting for workflow to complete');

      - name: Checkout AccelBrain-dev__confidential repository
        if: ${{ steps.create_release.outcome == 'success' && steps.wait_for_build.outcome == 'success' }}
        uses: actions/checkout@v4
        with:
          repository: ChangLijie/AccelBrain-dev__confidential
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: accelbrain-confidential

      - name: Update docker-compose.yaml image tag
        if: ${{ steps.create_release.outcome == 'success' && steps.wait_for_build.outcome == 'success' }}
        run: |
          cd accelbrain-confidential
          sed -i "s|innodiskorg/open-webui:.*|innodiskorg/open-webui:v${{ steps.get_version.outputs.version }}|g" docker-compose.yaml

      - name: Commit and push changes
        if: ${{ steps.create_release.outcome == 'success' && steps.wait_for_build.outcome == 'success' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: bump open-webui image to v${{ steps.get_version.outputs.version }}"
          repository: ./accelbrain-confidential
